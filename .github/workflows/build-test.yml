name: Build & Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build-and-test:
    name: ${{ matrix.build_type }} Build & Test
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    strategy:
      matrix:
        os: ["ubuntu-22.04"]
        build_type: ["Debug", "Release"]
        cc: ["gcc-11"]
        cxx: ["g++-11"]
        include:
          - os: "ubuntu-22.04"
            build_type: "Debug"
            cc: "clang-14"
            cxx: "clang++-14"

    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}

    steps:
      - uses: actions/checkout@v3

      - name: Install deps
        run: sudo apt install -y lcov

      - name: Build
        run: |
          cmake -B build/ \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build build/ -j

      - name: Test
        run: ctest --test-dir ./build/ --output-on-failure -T Test

      - name: Coverage
        if: ${{ !contains(matrix.cxx, 'clang') && success() }}
        run: |
          lcov --capture --directory ./build/ --output-file ./build/coverage.info
          lcov --remove ./build/coverage.info -o ./build/lcov.info \
            '/usr/include/*' \
            '/usr/local/include/*' \
            '*/test/*' \
            '*google*'

      - name: Upload coverage to Coveralls
        if: ${{ !contains(matrix.cxx, 'clang') && success() }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./build/lcov.info
          flag-name: run-${{ join(matrix.*, '-') }}
          parallel: true
          debug: true

  finish:
    needs: build-and-test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        parallel-finished: true
