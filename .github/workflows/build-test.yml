name: Build & Test

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      build_type:
        required: true
        type: string
      cc:
        required: true
        type: string
      cxx:
        required: true
        type: string
      coverage:
        required: false
        type: boolean
        default: false

jobs:
  build-and-test:
    name: ${{ inputs.build_type }} Build & Test
    runs-on: $${{ inputs.os }}
    if: "${{ !contains(github.event.head_commit.message, 'ci skip') }}"

    env:
      CC: ${{ inputs.cc }}
      CXX: ${{ inputs.cxx }}

    steps:
      - uses: actions/checkout@v3

      - name: Install deps
        run: sudo apt install -y cppcheck gdb lcov

      - name: Build
        run: |
          cmake -B build/ \
            -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}
          cmake --build build/ -j

      - name: Test
        run: ctest --test-dir ./build/ --output-on-failure -T Test

      - name: CppCheck
        run: bash scripts/run-cppcheck.sh

      - name: clang-tidy
        if: ${{ inputs.build_type == 'Release' }}
        run: bash scripts/run-clang-tidy.sh

      - name: Coverage
        if: ${{ success() && inputs.coverage }}
        run: |
          lcov --capture --directory ./build/ --output-file ./build/coverage.info
          lcov --remove ./build/coverage.info -o ./build/lcov.info \
            '/usr/include/*' \
            '/usr/local/include/*' \
            '*/test/*' \
            '*google*'

      - name: Upload Coverage to Coveralls
        uses: coverallsapp/github-action@master
        if: ${{ success() && inputs.coverage }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./build/lcov.info
          debug: true