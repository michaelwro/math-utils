name: Build & Test

on:
  workflow_call:
    inputs:
      ubuntu_version:
        required: true
        type: string
      build_type:
        required: true
        type: string

jobs:
  build-and-test:
    name: ${{ inputs.build_type }} Build & Test
    runs-on: ubuntu-latest
    if: "${{ !contains(github.event.head_commit.message, 'ci skip') }}"

    steps:
      - uses: actions/checkout@v3

      - name: Check deps versions
        uses: devcontainers/ci@v0.3
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            cmake --version
            ctest --version
            g++ --version

      - name: Build
        uses: devcontainers/ci@v0.3
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            cmake -B build/ -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}
            cmake --build build/ -j

      - name: Run tests
        uses: devcontainers/ci@v0.3
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            ctest -V --test-dir ./build/ --output-on-failure -T Test

      - name: Run CppCheck
        uses: devcontainers/ci@v0.3
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            bash scripts/run-cppcheck.sh

      - name: Coverage (lcov)
        uses: devcontainers/ci@v0.3
        if: ${{ success() && inputs.build_type == 'Debug' && inputs.ubuntu_version == "22.04" }}
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            lcov --capture --directory ./build/ --output-file ./build/coverage.info
            lcov --remove ./build/coverage.info -o ./build/coverage_filtered.info \
              '/usr/include/*' \
              '/usr/local/include/*' \
              '*/test/*' \
              '*google*'

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        if: ${{ success() }}
        with:
          parallel: true
          flag-name: run-${{ join(matrix.*, '-') }}
          path-to-lcov: ./build/coverage_filtered.info

      - name: Run clang-tidy
        uses: devcontainers/ci@v0.3
        if: ${{ inputs.build_type == 'Release' }}
        env:
          UBUNTU_VERSION: ${{ inputs.ubuntu_version }}
        with:
          cacheFrom: ghcr.io/${{ github.repository }}-devcontainer:${{ inputs.ubuntu_version }}
          runCmd: |
            bash scripts/run-clang-tidy.sh

  finish:
    needs: build-and-test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
